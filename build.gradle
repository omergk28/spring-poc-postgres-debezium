plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.1'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'com.diffplug.spotless' version '7.0.2'
}

group = 'com.omersoftware.cdc'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.flywaydb:flyway-database-postgresql'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.testcontainers:postgresql:1.19.8'
	testImplementation 'org.testcontainers:kafka:1.20.6'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	implementation 'io.hypersistence:hypersistence-utils-hibernate-63:3.9.0'
	implementation 'org.hibernate.validator:hibernate-validator:8.0.2.Final'
	implementation 'com.fasterxml.jackson.module:jackson-module-jakarta-xmlbind-annotations:2.15.2'

	implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
	implementation 'jakarta.validation:jakarta.validation-api:3.1.0'

	implementation 'org.springframework.kafka:spring-kafka'
}

spotless {
	java {
		googleJavaFormat()
		removeUnusedImports()
		formatAnnotations()
	}
}

// auto format code before compileJava task
tasks.compileJava.dependsOn(spotlessApply)

tasks.named('test') {
	useJUnitPlatform()
}
